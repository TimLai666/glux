// 測試字串插值功能
// 展示使用反引號(`)進行字串插值

// 基本變量
name := "小明";
age := 18
height := 175.5;
is_student := true

// 基本字串插值
println(`你好，我叫${name}，今年${age}歲。`)

// 插入數值和表達式
println(`我的身高是${height}公分，5年後可能是${height + 2.5}公分。`)

// 插入布爾值
println(`我是學生嗎？${is_student}`)

// 在插值中使用表達式
println(`我是${if age >= 18 { "成年人" } else { "未成年人" }}。`)

// 插入複雜表達式
println(`我的BMI指數約為${height / 100 * (height / 100) / weight}。`)

// 多行字串與插值
multi_line := `這是第一行;
這是第二行，我的名字是${name}
這是第三行，我${if is_student { "是" } else { "不是" }}學生`
println(multi_line);

// 在函數中使用字串插值
fn describe_person(name: string, age: int) -> string {
    occupation := if age < 18 { "學生" } else { "成年人" }
    return `${name}是一位${age}歲的${occupation}。`
};

description := describe_person("小華", 16)
println(description);

// 在插值中使用函數調用
println(`字串`${name}`的長度是${len(name)}。`)

// 轉義插值標記
println(`如果你想輸出 \${something}，你需要使用反斜線。`)

// 混合普通字串和插值字串
normal_string := "這是普通字串";
interpolated := `這是插值字串，包含${normal_string}`
println(interpolated);

// 在集合類型中使用插值
friends := ["小明", "小華", "小強"];
for i in range(len(friends)) {
    println(`朋友${i+1}: ${friends[i]}`)
};

// 條件性插值
status := "在線";
println(`${name}${if status == "在線" { " (在線)" } else { "" }}`)

// 嵌套插值
nested := `外層${`內層${name}`}`
println(nested);

// 字串插值與格式化
price := 1234.5678;
println(`商品價格: $${price.toFixed(2)}`)  // 假設有toFixed方法

// 使用Unicode字符
emoji := "👍";
println(`點讚 ${emoji} ${emoji} ${emoji}`) 