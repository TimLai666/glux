// 測試連續比較運算功能
// 展示連續比較運算，例如 0 < x < 10

// 基本變量初始化
x := 5
y := 7
z := 12

// 簡單的連續比較測試
if 0 < x < 10 {
    println("x 在 0 和 10 之間")
} else {
    println("x 不在 0 和 10 之間")
}

// 多重連續比較
if 0 < x < y < z < 20 {
    println("0 < x < y < z < 20 成立")
} else {
    println("0 < x < y < z < 20 不成立")
}

// 使用連續比較進行範圍檢查
age := 25
if 18 <= age <= 60 {
    println("年齡在成年人範圍內")
} else {
    println("年齡不在成年人範圍內")
}

// 混合比較運算符
if 0 <= x < 10 && 5 <= y < 15 {
    println("x 在 [0,10) 範圍內且 y 在 [5,15) 範圍內")
}

// 在函數中使用連續比較
fn is_valid_score(score: int) -> bool {
    return 0 <= score <= 100
}

test_score := 75
println(`分數 ${test_score} 是否有效: ${is_valid_score(test_score)}`)
test_score = 120
println(`分數 ${test_score} 是否有效: ${is_valid_score(test_score)}`)

// 與變量賦值一起使用
score := 85
valid := 0 <= score <= 100
println(`分數有效性: ${valid}`)

// 與其他表達式結合
grade := "優"
if 90 <= score <= 100 {
    grade = "優"
} else if 80 <= score < 90 {
    grade = "良"
} else if 70 <= score < 80 {
    grade = "中"
} else if 60 <= score < 70 {
    grade = "及格"
} else {
    grade = "不及格"
}
println(`分數 ${score} 的等級: ${grade}`)

// 測試連續比較的邊界情況
edge_case := 10
if 10 <= edge_case <= 10 {
    println("邊界值剛好處於邊界")
}

// 測試浮點數連續比較
pi := 3.14159
if 3.0 < pi < 4.0 {
    println("pi 在 3 和 4 之間")
}

// 連續比較和邏輯運算符的組合
combined := (0 < x < 10) && (0 < y < 10)
println(`x 和 y 都在 (0,10) 範圍內: ${combined}`) 
