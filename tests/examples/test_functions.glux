// 基本函數
fn add(a: int, b: int) -> int {
    return a + b
}

// 帶預設參數的函數
fn greet(name: string) -> string {
    // 這裡本應該使用預設參數，但目前尚未支持
    // 檢查name是否為空字串，模擬預設參數行為
    if name == "" {
        name = "訪客"
    }
    return `您好，${name}！`
}

// 多值返回
fn divmod(a: int, b: int) -> (int, int) {
    return (a / b, a % b)
}

// 錯誤處理
fn safe_divide(a: int, b: int) -> union<int, error> {
    if b == 0 {
        return error("除數不能為零")
    }
    return a / b
}

// 閉包
fn make_counter() -> fn() -> int {
    count := 0
    return fn() -> int {
        count += 1
        return count
    }
}

// 測試以上函數
println(add(5, 3))
println(greet(""))
println(greet("張三"))

quotient, remainder := divmod(10, 3)
println(`10 除以 3 的商是 ${quotient}，餘數是 ${remainder}`)
result := safe_divide(10, 2)
if is_error(result) {
    println(`錯誤：${result}`)
} else {
    println(`結果：${result}`)
}

result2 := safe_divide(10, 0)
if is_error(result2) {
    println(`錯誤：${result2}`)
}

counter := make_counter()
println(counter())  // 1
println(counter())  // 2 